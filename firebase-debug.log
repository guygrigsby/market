[debug] [2020-11-13T00:06:42.523Z] ----------------------------------------------------------------------
[debug] [2020-11-13T00:06:42.524Z] Command:       /usr/local/Cellar/node/14.8.0/bin/node /usr/local/bin/firebase init
[debug] [2020-11-13T00:06:42.524Z] CLI Version:   8.15.1
[debug] [2020-11-13T00:06:42.524Z] Platform:      darwin
[debug] [2020-11-13T00:06:42.525Z] Node Version:  v14.8.0
[debug] [2020-11-13T00:06:42.525Z] Time:          Thu Nov 12 2020 17:06:42 GMT-0700 (Mountain Standard Time)
[debug] [2020-11-13T00:06:42.526Z] ----------------------------------------------------------------------
[debug] [2020-11-13T00:06:42.526Z] 
[debug] [2020-11-13T00:06:42.529Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-11-13T00:06:42.529Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/guygrigsby/go/src/github.com/guygrigsby/market

Before we get started, keep in mind:

  * You are initializing in an existing Firebase project directory

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[info] i  .firebaserc already has a default project, using marketplace-c87d0. 
[debug] [2020-11-13T00:06:47.449Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/marketplace-c87d0  
 
[debug] [2020-11-13T00:06:47.645Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 13 Nov 2020 00:06:47 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[info] Skipping overwrite of Database Rules.
[info] The rules defined in database.rules.json will be published when you do firebase deploy.
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2020-11-13T00:06:49.058Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-11-13T00:06:49.059Z] > authorizing via signed-in user
[debug] [2020-11-13T00:06:49.059Z] [iam] checking project marketplace-c87d0 for permissions ["firebase.projects.get"]
[debug] [2020-11-13T00:06:49.060Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/marketplace-c87d0:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2020-11-13T00:06:49.275Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 13 Nov 2020 00:06:49 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=95","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-13T00:06:49.276Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/marketplace-c87d0/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2020-11-13T00:06:49.277Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/marketplace-c87d0/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2020-11-13T00:06:49.531Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 13 Nov 2020 00:06:49 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-11-13T00:06:49.603Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Fri, 13 Nov 2020 00:06:49 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-Q050=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-T050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] ✔  Wrote functions/package.json 
[info] ✔  Wrote functions/index.js 
[info] ✔  Wrote functions/.gitignore 
